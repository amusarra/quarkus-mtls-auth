<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.dontesta.quarkus.tls.auth</groupId>
    <artifactId>tls-mutual-auth</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.14.1</quarkus.platform.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.3.1</surefire-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                            <goal>native-image-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>generate-ca-certificate</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/main/shell/certs-manager/certs_manager.sh</executable> <!-- Comando da eseguire, ad esempio /bin/sh per shell script -->
                            <arguments>
                                <argument>generate-ca</argument>
                                <argument>--working-dir</argument>
                                <argument>${project.basedir}/src/main/resources/certs</argument>
                                <argument>--private-key-file</argument>
                                <argument>ca_private_key.pem</argument>
                                <argument>--ca-certificate-file</argument>
                                <argument>ca_cert.pem</argument>
                                <argument>--validity-days</argument>
                                <argument>1825</argument>
                                <argument>--country</argument>
                                <argument>IT</argument>
                                <argument>--state</argument>
                                <argument>Italy</argument>
                                <argument>--locality</argument>
                                <argument>Bronte (CT)</argument>
                                <argument>--organization</argument>
                                <argument>Dontesta</argument>
                                <argument>--organizational-unit</argument>
                                <argument>IT Labs</argument>
                                <argument>--common-name</argument>
                                <argument>Dontesta CA</argument>
                                <argument>--output-p12-file</argument>
                                <argument>ca_cert.p12</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-server-certificate</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/main/shell/certs-manager/certs_manager.sh</executable>
                            <arguments>
                                <argument>generate-server</argument>
                                <argument>--working-dir</argument>
                                <argument>${project.basedir}/src/main/resources/certs</argument>
                                <argument>--private-key-file</argument>
                                <argument>server_private_key.pem</argument>
                                <argument>--csr-file</argument>
                                <argument>server_csr.pem</argument>
                                <argument>--server-cert-file</argument>
                                <argument>server_cert.pem</argument>
                                <argument>--ca-cert-file</argument>
                                <argument>ca_cert.pem</argument>
                                <argument>--ca-key-file</argument>
                                <argument>ca_private_key.pem</argument>
                                <argument>--ca-key-password</argument>
                                <argument></argument>
                                <argument>--validity-days</argument>
                                <argument>365</argument>
                                <argument>--country</argument>
                                <argument>IT</argument>
                                <argument>--state</argument>
                                <argument>Italy</argument>
                                <argument>--locality</argument>
                                <argument>Bronte (CT)</argument>
                                <argument>--organization</argument>
                                <argument>Dontesta</argument>
                                <argument>--organizational-unit</argument>
                                <argument>IT Labs</argument>
                                <argument>--common-name</argument>
                                <argument>rd.quarkus.dontesta.it</argument>
                                <argument>--san-domains</argument>
                                <argument>DNS:admin.quarkus.dontesta.it,DNS:blog.quarkus.dontesta.it</argument>
                                <argument>--output-p12-file</argument>
                                <argument>server_cert.p12</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-cert-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>rm</executable>
                            <arguments>
                                <argument>-rf</argument>
                                <argument>${project.basedir}/src/main/resources/certs</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
        </profile>
    </profiles>
</project>
